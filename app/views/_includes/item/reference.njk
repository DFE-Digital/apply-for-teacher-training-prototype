{% set applicationPath = "/application/" + applicationId %}

{% set statusHtml %}
  {{ govukTag({
    classes: "app-tag " + status | statusClass,
    text: status | capitalize
  }) }}
{% endset %}

{% set contextHtml %}
  {% if status == "Awaiting response" %}
    <p class="govuk-body govuk-!-margin-top-2">We’ve emailed your referee. Keep in touch with them to ensure they’re planning on giving a reference as soon as possible.</p>
  {% elif status == "Reference overdue" %}
    <p class="govuk-body govuk-!-margin-top-2">Your referee has not responded yet. Ask them if they got the email - it may have gone to junk or spam.</p>
    <p class="govuk-body govuk-!-margin-top-2">You can also add more referees to increase your chances of getting a reference quickly.</p>
  {% elif status == "Request cancelled" %}
    <p class="govuk-body govuk-!-margin-top-2">Training providers will not see any information about this reference request.</p>
  {% elif status == "Request failed" %}
    <p class="govuk-body govuk-!-margin-top-2">The reference request never reached your referee.</p>
  {% elif status == "Reference declined" %}
    <p class="govuk-body govuk-!-margin-top-2">{{ item.name }} said they will not give a reference.</p>
  {% elif status == "Deactivated" %}
    <p class="govuk-body govuk-!-margin-top-2">This reference will not be sent to any provider.</p>
  {% endif %}
{% endset %}

{% set logHtml %}
  <ul class="govuk-list">
  {% for entry in item.log %}
    <li>
      {{ entry.note }}
      <span class="govuk-hint govuk-!-margin-bottom-0 govuk-!-font-size-16">{{ entry.date | date("DDD 'at' T") }}</span>
    </li>
  {% endfor %}
  </ul>
{% endset %}

{{ govukSummaryList({
  rows: [{
    key: {
      text: "Name"
    },
    value: {
      text: item.name or "Not entered"
    },
    actions: {
      items: [{
        href: applicationPath + "/references/" + item.id + "/name?referrer=" + referrer,
        text: "Change",
        visuallyHiddenText: "name"
      }]
    } if canAmendReferee
  }, {
    key: {
      text: "Email address"
    },
    value: {
      text: item.email or "Not entered"
    },
    actions: {
      items: [{
        href: applicationPath + "/references/" + item.id + "/email?referrer=" + referrer,
        text: "Change",
        visuallyHiddenText: "email address"
      }]
    } if canAmendReferee
  }, {
    key: {
      text: "Reference type"
    },
    value: {
      text: item.type or "Not entered"
    },
    actions: {
      items: [{
        href: applicationPath + "/references/" + item.id + "/type?referrer=" + referrer,
        text: "Change",
        visuallyHiddenText: "reference type"
      }]
    } if canAmendReferee
  }, {
    key: {
      text: "Relationship to referee"
    },
    value: {
      text: (item.relationship or "Not entered") | nl2br | safe
    },
    actions: {
      items: [{
        href: applicationPath + "/references/" + item.id + "/relationship?referrer=" + referrer,
        text: "Change",
        visuallyHiddenText: "relationship to referee"
      }]
    } if canAmendReferee
  }, {
    key: {
      text: "Status"
    },
    value: {
      html: statusHtml + contextHtml
    }
  }, {
    key: {
      text: "History"
    },
    value: {
      html: logHtml
    },
    actions: {
      items: [{
        href: applicationPath + "/references/" + item.id + "/action/nudge?referrer=" + referrer,
        text: "Send a reminder to this referee"
      }]
    } if canNudgeReferee
  } if item.log and showReferenceRequestLog]
}) }}
