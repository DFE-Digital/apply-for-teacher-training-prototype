{% extends "_form.njk" %}

{% set formaction = "/application/" + applicationId + "/degree/" + id + "/country" %}

{% set action = "edit" if applicationValue(["degree", id, "type"]) else "add" %}
{% set degreeCount = applicationValue(["degree"]) | length %}
{% if degreeCount >= 1 and action == "add" %}
  {% set title = (action | capitalize) + " another degree" %}
  {% set degreeTypes = degree.types.all %}
{% else %}
  {% set title = (action | capitalize) + " degree" %}
  {% set degreeTypes = degree.types.undergraduate %}
{% endif %}
{% set allowsFeedback = true %}

{% if degreeCount < 1 and action == "add" %}
  {% set ukHintText = "For example, BA, BSc or other (please specify)" %}
{% else %}
  {% set ukHintText = "For example, BA, BSc, Masters, PhD, or other (please specify)" %}
{% endif %}
{% set intHintHtml = "For example, Bachelor degree, Bachelor of Arts, <span lang=\"fr\">Dipl√¥me</span>, <span lang=\"es\">Licenciatura</span>" %}

{% block pageNavigation %}
  {% if referrer %}
    {{ govukBackLink({
      href: referrer })
    }}
  {% else %}
    {{ govukBackLink({
      href: "/application/" + applicationId,
      text: "Back to application"
    }) }}
  {% endif %}
{% endblock %}

{% block primary %}
  <p class="govuk-body">You need an undergraduate degree to apply for teacher training.</p>

  {% set ukConditionalHtml %}
    <div class="govuk-form-group">
      <label class="govuk-label" for="degree-{{ id }}-typeUk">Enter degree type</label>
      <span id="degree-{{ id }}-typeUk-hint" class="govuk-hint">{{ ukHintText }}</span>
      <div id="type-uk-autocomplete-container"></div>
    </div>
  {% endset %}

  {% set countryHtml %}
    {{ appAutocomplete({
      label: {
        text: "Country",
        classes: "govuk-label--s"
      },
      items: countries
    } | decorateApplicationAttributes(["degree", id, "country"])) }}
  {% endset %}

  {{ govukRadios({
    fieldset: {
      legend: {
        text: "Which country was the degree from?",
        classes: "govuk-label--m"
      }
    },
    items: [{
      value: "domestic",
      text: "United Kingdom"
    }, {
      value: "international",
      text: "Another country",
      conditional: {
        html: countryHtml
      }
    }]
  } | decorateApplicationAttributes(["degree", id, "provenance"])) }}

  {{ govukButton({
    text: "Save and continue"
  }) }}
{% endblock %}

{% block pageScripts %}
  <script src="/public/javascripts/autocomplete.min.js"></script>
  <script>
    function inputTemplate (result) {
      if (result) {
        const name = result.split(' - ')

        if (name[1]) {
          return name[0] && name[0]
        }

        return result && result
      }

      return result && result
    }

    function suggestionTemplate (result) {
      const name = result.split(' - ')

      if (name[1]) {
        return name[0] && `<strong>${name[0]}</strong> <span class="autocomplete__option--hint">${name[1]}</span>`
      }

      return result && `<strong>${result}</strong>`
    }

    accessibleAutocomplete({
      element: document.querySelector('#type-uk-autocomplete-container'),
      id: 'degree-{{ id }}-typeUk',
      name: "applications[{{ applicationId }}][degree][{{ id }}][typeUk]",
      defaultValue: '{{ applicationValue(["degree", id, "typeUk"]) }}',
      placeholder: false,
      showNoOptionsFound: false,
      source: [
        {% for item in degreeTypes %}"{{ item.text }}",{% endfor %}
      ],
      templates: {
        inputValue: inputTemplate,
        suggestion: suggestionTemplate
      }
    })
  </script>
{% endblock %}
