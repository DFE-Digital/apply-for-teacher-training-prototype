{% extends "_form-question.njk" %}

{% set applicationPath = "/application/" + applicationId %}
{% set title = "What type of degree is it?" %}
{% set allowsFeedback = true %}
{% set international = applicationValue(["degree", id, "provenance"]) == "international" %}

{% set degreeLevel = applicationValue(["degree", id, "level"]) %}

{% block pageNavigation %}
  {{ govukBackLink({
    href: referrer or paths.back
  }) }}
{% endblock %}

{% block primary %}

  {% if international %}

    TODO

  {% else %}

    {% if degreeLevel == "Bachelor" %}
      {% set otherLevelsHint = "Bachelor of Engineering (BEng)" %}
    {% elif degreeLevel == "Foundation" %}
      {% set otherLevelsHint = "Foundation of Engineering (FdEng)" %}
    {% elif degreeLevel == "Master’s" %}
      {% set otherLevelsHint = "Master of Engineering (MEng)" %}
    {% elif degreeLevel == "Doctorate" %}
      {% set otherLevelsHint = "Doctor of Science (DSc)" %}
    {% endif %}

    {% set otherDegreeTypeHtml %}
      <div class="govuk-form-group">
        <label class="govuk-label govuk-label--s" for="degree-{{ id }}-typeUk">Degree type</label>
        <span id="degree-{{ id }}-typeUk-hint" class="govuk-hint">For example, {{ otherLevelsHint }}</span>
        <div id="type-uk-autocomplete-container"></div>
      </div>
    {% endset %}

    {% if not (degreeLevel == "other")  %}
      {% set radioItems = [] %}

      {% for degreeType in degreeTypes %}
        {% if degreeType.priority == 1 %}
          {% set displayTitle = degreeType.title %}
          {% set displayTitle = displayTitle + " (" + degreeType.abbreviation  + ")" if degreeType.abbreviation %}
          {% set radioItems = radioItems | push({value: degreeType.title, text: displayTitle}) %}
        {% endif %}
      {% endfor %}

      {% set radioItems = radioItems | push({divider: "or"}) %}

      {% set radioItems = radioItems | push({
        value: "other",
        text: "Another degree type",
        conditional: {
          html: otherDegreeTypeHtml
        }
      }) %}

      {% if degreeLevel == "Bachelor" %}
        {% set hint = { text: "Do not include ‘Honours‘ or ‘Hons‘" } %}
      {% endif %}

      {{ govukRadios({
        name: "degree-type",
        fieldset: {
          legend: {
            text: title,
            isPageHeading: true,
            classes: "govuk-fieldset__legend--l"
          }
        },
        hint: hint,
        items: radioItems
      } | decorateApplicationAttributes(["degree", id, "type"])) }}
    {% else %}

      {{ govukInput({
        label: {
          text: title,
          isPageHeading: true,
          classes: "govuk-label--l"
        }
      } | decorateApplicationAttributes(["degree", id, "type"])) }}

    {% endif %}

  {% endif %}

  {{ govukButton({
    text: "Save and continue"
  }) }}
{% endblock %}


{% block pageScripts %}
  <script src="/public/javascripts/autocomplete.min.js"></script>
  <script>
    function inputTemplate (result) {
      if (result) {
        const name = result.split(' - ')

        if (name[1]) {
          return name[0] && name[0]
        }

        return result && result
      }

      return result && result
    }

    function suggestionTemplate (result) {
      const name = result.split(' - ')

      if (name[1]) {
        return name[0] && `<span class="">${name[1]}</span> (${name[0]})`
      }

      return result && `${result}`
    }

    accessibleAutocomplete({
      element: document.querySelector('#type-uk-autocomplete-container'),
      id: 'degree-{{ id }}-typeUk',
      name: "applications[{{ applicationId }}][degree][{{ id }}][otherType]",
      defaultValue: '{{ applicationValue(["degree", id, "otherType"]) }}',
      placeholder: false,
      showNoOptionsFound: false,
      minLength: 0,
      showAllValues: true,
      source: [
        {% for item in degreeTypes %}"{{ item.title }} {{ " (" + item.abbreviation +")" if item.abbreviation else ""}}",{% endfor %}
      ],
      templates: {
        suggestion: suggestionTemplate
      }
    })
  </script>
{% endblock %}
